---
title: "Take-home Exercise 1"
#subtitle: "Geospatial Data Wrangling with R"
description: "Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore"
execute: 
  warning: false
  eval: true
  echo: true
# date: "`r Sys.Date()`"
date: 01/16/2024
date-format: "D MMM, YYYY" 
author: 
  - Wan Shen
sidebar: false
title-block-banner: true
categories:
  - Take-Home Exercise
title-block-categories: false
#format: 
  #html: 
    #code-fold: true
    #code-summary: "Show the code"
---

# 1.0 Getting Started

```{r}
pacman::p_load(sf, tidyverse, tmap, arrow, lubridate)
```

# 2.0 Spatial Data Wrangling

## 2.1 Importing the spatial data

Aspatial Data

```{r}
#grabMe <- read_parquet("../../data/TakeHome/TakeHome_01/aspatial/part-00000.parquet")
#head(grabMe, n=3)
```

Geospatial Data

```{r}
#| eval: false 
roadMe <- st_read("../../data/TakeHome/TakeHome_01/geospatial",
               layer = "gis_osm_roads_free_1")
head(roadMe, n=3)
```

```{r}
#| eval: false 
islandMe <- st_read("../../data/TakeHome/TakeHome_01/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml")
head(islandMe, n=3)
```

```{r}
#| eval: false 
#| echo: false 
write_rds(roadMe, "../../data/TakeHome/TakeHome_01/rds/road_df.rds")
write_rds(islandMe, "../../data/TakeHome/TakeHome_01/rds/island_df.rds")
```

```{r}
road_df <- read_rds("../../data/TakeHome/TakeHome_01/rds/road_df.rds")
island_df <- read_rds("../../data/TakeHome/TakeHome_01/rds/island_df.rds")
```

```{r}
road_df <- road_df[!(is.na(road_df$name)), ]
```

::: callout-note
Using the crs info function to retrieve the referencing system information of these geospatial data.
:::

```{r}
crs_info1 <- st_crs(road_df)
crs_info2 <- st_crs(island_df)
crs_info1
```

```{r}
crs_info2
```

::: callout-note
Changing the referencing system to Singapore national projected coordinate system.
:::

```{r}
road_sf <- st_transform(road_df, crs = 3414)
island_sf <- st_transform(island_df, crs = 3414)
```

## 2.2 Mapping the geospatial data sets

::: callout-note
After checking the referencing system of each geospatial data data frame, it is also useful for us to plot a map to show their spatial patterns.
:::

```{r}
tmap_mode("plot")
tm_shape(island_sf) +
  tm_polygons() +
  tm_shape(road_sf) +
  tm_dots()
```

# 3.0 Geospatial Data wrangling

## 3.1 Converting sf data frames to sp’s Spatial* class

::: callout-note
The code chunk below uses as_Spatial() of sf package to convert the three geospatial data from simple feature data frame to sp’s Spatial* class.
:::

```{r}
island_sf <- island_sf[st_is_valid(island_sf), ]
# Identify empty geometries
empty_geoms <- st_is_empty(island_sf)

# Remove features with empty geometries
island_sf <- island_sf[!empty_geoms, ]
island_sf <- st_zm(island_sf)
```

```{r}
island <- as_Spatial(island_sf)
road <- as_Spatial(road_sf)
```

```{r}
island
```

```{r}
road
```

```{r}
#| eval: false
#| echo: false
write_rds(road, "../../data/TakeHome/TakeHome_01/rds/as_road_df.rds")
write_rds(island, "../../data/TakeHome/TakeHome_01/rds/as_island_df.rds")
```

```{r}
road_as <- read_rds("../../data/TakeHome/TakeHome_01/rds/as_road_df.rds")
island_as <- read_rds("../../data/TakeHome/TakeHome_01/rds/as_island_df.rds")
```

## 3.2 Converting the Spatial* class into generic sp format

::: callout-note
Since spatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into Spatial object first.

The codes chunk below converts the Spatial* classes into generic sp objects.
:::

```{r}
island_sp <- as(island_as, "SpatialPolygons")
road_sp <- as(road_as, "SpatialPoints")
```

```{r}
island_sp
```

```{r}
road_sp
```

```{r}
#| eval: false
#| echo: false
write_rds(road_sp, "../../data/TakeHome/TakeHome_01/rds/sp_road_df.rds")
write_rds(island_sp, "../../data/TakeHome/TakeHome_01/rds/sp_island_df.rds")
```

```{r}
road_sp <- read_rds("../../data/TakeHome/TakeHome_01/rds/sp_road_df.rds")
island_sp <- read_rds("../../data/TakeHome/TakeHome_01/rds/sp_island_df.rds")
```

## 3.3 Converting the generic sp format into spatstat’s ppp format

::: callout-note
Now, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.
:::

```{r}
#road_ppp <- as(road_sp, "ppp")
#road_ppp
#library(spatstat)
#road_ppp <- as.ppp(road_sp)
```

```{r}
#plot(road_ppp)
```

```{r}
#sg_owin <- as(island_sp, "owin")
#plot(sg_owin)
```
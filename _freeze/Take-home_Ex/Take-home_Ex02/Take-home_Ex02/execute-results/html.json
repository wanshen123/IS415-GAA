{
  "hash": "344ba50ac588bb537f3910a81ea7502f",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\ndescription: \"Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan\"\nexecute: \n  warning: false\n  eval: true\n  echo: true\n  freeze: true\n# date: \"2024-02-23\"\ndate: 02/09/2024\ndate-format: \"D MMM, YYYY\" \nauthor: \n  - Wan Shen\nsidebar: false\ntitle-block-banner: true\ncategories:\n  - Take-Home Exercise\ntitle-block-categories: false\nformat: html \n---\n\n\n# 1.0 Getting Started\n\n**Background**\n\nIn this study, our focus will be on investigating whether the distribution of dengue fever outbreaks in Tainan City, Taiwan, is independent of spatial and temporal factors. If the outbreak exhibits spatial and spatio-temporal dependencies, our goal is to pinpoint clusters, outliers, and emerging hot spot/cold spot areas within the region.\n\n**Objective**\n\nThe primary objective of this study is to apply spatial and spatio-temporal analysis methods to discover the distribution of dengue fever in Tainan City, Taiwan. The results of the analysis will be useful for public health officials and policymakers to make informed decisions and implement targeted interventions to control the spread of dengue fever in Tainan City, Taiwan.\n\n**Packages Used:**\n\n-   [**sf**](https://cran.r-project.org/web/packages/sf/index.html): For importing, managing, and processing geospatial data.\n\n-   [**tidyverse**](https://www.tidyverse.org/): Collection of packages for data science tasks.\n\n-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html): For creating thematic maps, such as choropleth and bubble maps.\n\n-   [**sfdep**](https://sfdep.josiahparry.com/): Creating an sf and tidyverse friendly interface.\n\n-   [**plotly**](https://plotly.com/r/): For creating interactive plots and maps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse, plotly)\n```\n:::\n\n\n# 2.0 Spatial Data Wrangling\n\n## 2.1 Importing the spatial data\n\nAspatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengueDaily <- read_csv(\"../../data/TakeHome/TakeHome_02/aspatial/Dengue_Daily.csv\")\n```\n:::\n\n\nGeospatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan <- st_read(dsn = \"../../data/TakeHome/TakeHome_02/geospatial\", \n                 layer = \"TAINAN_VILLAGE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\wanshen123\\IS415-GAA\\data\\TakeHome\\TakeHome_02\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n:::\n\n```{.r .cell-code}\nhead(tainan, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 3 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0936 ymin: 22.93251 xmax: 120.2905 ymax: 23.13561\nGeodetic CRS:  TWD97\n     VILLCODE COUNTYNAME TOWNNAME VILLNAME      VILLENG COUNTYID COUNTYCODE\n1 67000280002     臺南市   歸仁區   六甲里  Liujia Vil.        D      67000\n2 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n3 67000150009     臺南市   七股區   溪南里   Xinan Vil.        D      67000\n  TOWNID TOWNCODE NOTE                       geometry\n1    D33 67000280 <NA> POLYGON ((120.2725 22.95868...\n2    D06 67000350 <NA> POLYGON ((120.1176 23.08387...\n3    D22 67000150 <NA> POLYGON ((120.121 23.1355, ...\n```\n:::\n:::\n\n\n## 2.2 Data Pre-Processing\n\nRetrieve D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_tainan <- tainan[tainan$TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"), ]\n```\n:::\n\n\nVisualizing the filtered Tainan map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(filtered_tainan) + \n  tm_polygons(\"TOWNID\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nDengue fever cases confined to epidemiology week 31-50, 2023\n\n::: callout-note\nConvert date column to Date format if it's not already\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengueDaily$發病日 <- as.Date(dengueDaily$發病日)\n```\n:::\n\n\nExtract week numbers from the date column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengueDaily$week_number_onsetDay <- as.numeric(format(dengueDaily$發病日, \"%V\"))\n```\n:::\n\n\nDefine the start (31) and end (50) weeks of your range\n\n\n::: {.cell}\n\n```{.r .cell-code}\nonset_start_week <- 31\nonset_end_week <- 50\n```\n:::\n\n\nDefine the year\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyear <- 2023\n```\n:::\n\n\nFilter rows based on the week range\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue <- dengueDaily[dengueDaily$week_number_onsetDay >= onset_start_week & dengueDaily$week_number_onsetDay <= onset_end_week & year(dengueDaily$發病日) == year, ]\n```\n:::\n\n\n## 2.3 Data Cleaning\n\nTranslate to English\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue <- filtered_dengue %>%\n  rename('x-coordinate' = 最小統計區中心點X,\n         'y-coordinate' = 最小統計區中心點Y,\n         'COUNTYNAME' = 居住縣市,\n         'VILLNAME' = 居住村里,\n         'TOWNNAME' = 居住鄉鎮)\n```\n:::\n\n\nCheck the current class of the column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(filtered_dengue$`x-coordinate`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nclass(filtered_dengue$`y-coordinate`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n\nConvert the column to numeric\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue$`x-coordinate` <- as.numeric(filtered_dengue$`x-coordinate`)\nfiltered_dengue$`y-coordinate` <- as.numeric(filtered_dengue$`y-coordinate`)\n```\n:::\n\n\nCheck the class of the column after conversion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(filtered_dengue$`x-coordinate`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n\n```{.r .cell-code}\nclass(filtered_dengue$`y-coordinate`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n\nRemove NA values from all columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue <- na.omit(filtered_dengue)\n```\n:::\n\n\nConvert to an sf object with POINT geometry\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue1 <- st_as_sf(filtered_dengue, coords = c('x-coordinate', 'y-coordinate'), crs = st_crs(filtered_tainan))\n```\n:::\n\n\nVisualizing the distribution of dengue cases on the map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(filtered_tainan) +\n  tm_polygons(\"TOWNID\") +\ntm_shape(filtered_dengue1) +\n  tm_dots(col = \"black\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nGrouping village based on number of dengue cases\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data <- filtered_dengue %>%\n  group_by(TOWNNAME, VILLNAME, week_number_onsetDay) %>%\n  summarise(dengueCases = sum(確定病例數))\n```\n:::\n\n\nRemoving missing values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data <- grouped_data[!(grouped_data$VILLNAME == \"None\"), ]\n```\n:::\n\n\nCombining both data frame by using left join\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data <- left_join(filtered_tainan, grouped_data, by = c(\"TOWNNAME\",\"VILLNAME\"))\n```\n:::\n\n\n## 2.4 Plotting a choropleth map\n\nBefore removing missing values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(joined_data) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nMissing values means that the dengue cases are not part of the selected counties.\n:::\n\nTo fill missing values (NA) with 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data$dengueCases[is.na(joined_data$dengueCases)] <- 0\n```\n:::\n\n\nAfter removing missing values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(joined_data) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nVisualizing the distribution of dengue cases by month\n\n::: {.panel-tabset .nav-pills}\n## August\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugust <- joined_data %>%\n  filter(week_number_onsetDay >= 31 & week_number_onsetDay <= 35)\ntmap_mode(\"plot\")\ntm_shape(august) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"August 2023 Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n## September\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseptember <- joined_data %>%\n  filter(week_number_onsetDay >= 36 & week_number_onsetDay <= 39)\ntmap_mode(\"plot\")\ntm_shape(september) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"September 2023 Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n## October\n\n\n::: {.cell}\n\n```{.r .cell-code}\noctober <- joined_data %>%\n  filter(week_number_onsetDay >= 40 & week_number_onsetDay <= 44)\ntmap_mode(\"plot\")\ntm_shape(october) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"October 2023 Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n## November\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnovember <- joined_data %>%\n  filter(week_number_onsetDay >= 45 & week_number_onsetDay <= 48)\ntmap_mode(\"plot\")\ntm_shape(november) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"November 2023 Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## December\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecember <- joined_data %>%\n  filter(week_number_onsetDay >= 49 & week_number_onsetDay <= 50)\ntmap_mode(\"plot\")\ntm_shape(december) +\n  tm_fill(\"dengueCases\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Dengue Cases\") +\n  tm_layout(main.title = \"December 2023 Distribution of Dengue Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n:::\n\n::: callout-note\nAreas that are white in colour are those that have no dengue cases.\n:::\n\n# 3.0 Global Spatial Autocorrelation Analysis\n\n## 3.1 Deriving contiguity weights: Queen’s method\n\nWe compute spatial contiguity relationships among geometries stored in a data frame, calculates spatial weights based on these relationships, and adds the resulting variables to the data frame.\n\n::: callout-note\nResetting the joined_data to the original data frame\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data <- filtered_dengue %>%\n  group_by(VILLNAME) %>%\n  summarise(dengueCases = sum(確定病例數))\ngrouped_data <- grouped_data[!(grouped_data$VILLNAME == \"None\"), ]\njoined_data <- left_join(filtered_tainan, grouped_data, by = c(\"VILLNAME\"))\njoined_data$dengueCases[is.na(joined_data$dengueCases)] <- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- joined_data %>%\n  mutate(nb = st_contiguity(geometry, queen=TRUE),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\nExamining the contents of the spatial weights matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(wm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 258\nColumns: 14\n$ nb          <nb> <6, 118, 160>, <126, 128, 138, 168, 222>, <68, 69, 172, 181…\n$ wt          <list> <0.3333333, 0.3333333, 0.3333333>, <0.2, 0.2, 0.2, 0.2, 0…\n$ VILLCODE    <chr> \"67000350032\", \"67000270011\", \"67000370005\", \"67000330004\"…\n$ COUNTYNAME  <chr> \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\"…\n$ TOWNNAME    <chr> \"安南區\", \"仁德區\", \"中西區\", \"南區\", \"安南區\", \"安南區\", …\n$ VILLNAME    <chr> \"青草里\", \"保安里\", \"赤嵌里\", \"大成里\", \"城北里\", \"城南里\"…\n$ VILLENG     <chr> \"Qingcao Vil.\", \"Bao'an Vil.\", \"Chihkan Vil.\", \"Dacheng Vi…\n$ COUNTYID    <chr> \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\"…\n$ COUNTYCODE  <chr> \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"670…\n$ TOWNID      <chr> \"D06\", \"D32\", \"D08\", \"D02\", \"D06\", \"D06\", \"D08\", \"D06\", \"D…\n$ TOWNCODE    <chr> \"67000350\", \"67000270\", \"67000370\", \"67000330\", \"67000350\"…\n$ NOTE        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ dengueCases <dbl> 2, 33, 111, 29, 6, 13, 37, 48, 108, 66, 26, 2, 5, 11, 24, …\n$ geometry    <POLYGON [°]> POLYGON ((120.1176 23.08387..., POLYGON ((120.2304…\n```\n:::\n:::\n\n\n## 3.2 Computing Global Moran’s I\n\nWe compute the global Moran’s I statistic to test for spatial autocorrelation in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_q$dengueCases,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 2\n $ I: num 0.397\n $ K: num 4.83\n```\n:::\n:::\n\n\n## 3.3 Performing Global Moran’s I test\n\nGlobal_moran_test() performs the Moran's I test, which assesses whether there is spatial autocorrelation in the variable represented by wm_q$count. The contiguity relationship matrix (wm_q$nb) and the corresponding spatial weights (wm_q\\$wt) are used to compute Moran's I statistic and its associated p-value. This helps to determine if the observed spatial pattern is significantly different from what would be expected under spatial randomness.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$dengueCases,\n                       wm_q$nb,\n                       wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 10.902, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.396838835      -0.003891051       0.001351108 \n```\n:::\n:::\n\n\n## 3.4 Performing Global Moran’s I permutation test\n\nIn practical applications, it's advisable to utilize Monte Carlo simulation when conducting statistical tests. For the **sfdep** package, this functionality is facilitated through the [`globel_moran_perm()`](https://sfdep.josiahparry.com/reference/global_moran_perm.html) function.\n\nTo maintain reproducibility in the simulation process, it's recommended to employ `set.seed()` before conducting the simulation. This ensures that the computational results are consistent and reproducible across different runs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\nNext, `global_moran_perm()` is used to perform Monte Carlo simulation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$dengueCases,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.39684, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\nThe statistical report above show that the p-value is smaller than alpha value of 0.05. Hence, we have enough statistical evidence to reject the null hypothesis that the spatial distribution of dengue cases per counties resemble random distribution (i.e. independent from spatial). Because the Moran’s I statistics is greater than 0. We can infer that the spatial distribution shows sign of clustering.\n\n# 4.0 Local Spatial Autocorrelation Analysis\n\n## 4.1 Computing local Moran’s I\n\nLocal_moran() computes the local Moran's I statistic to test for spatial autocorrelation in the data. The contiguity relationship matrix (wm_q$nb) and the corresponding spatial weights (wm_q$wt) are used to compute the local Moran's I statistic and its associated p-value. This helps to determine if the observed spatial pattern is significantly different from what would be expected under spatial randomness.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>% \n  mutate(local_moran = local_moran(\n    dengueCases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n## 4.2 Visualising local Moran’s I\n\nIn this code chunk below, tmap functions are used prepare a choropleth map by using value in the ii field.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Dengue Cases\",\n            main.title.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nHigh-high clusters (orange): These areas have a high number of dengue cases and are also neighbors to other areas with a high number of cases. This suggests that there is a spatial cluster of dengue cases in these areas.\n\nLow-high outliers (green): These areas have a low number of dengue cases, but their neighbors have a high number of cases. This may be due to chance, or it may be due to local factors that are protecting these areas from dengue.\n\n## 4.3 Visualising p-value of local Moran’s I\n\nIn the code chunk below, tmap functions are used prepare a choropleth map by using value in the p_ii_sim field.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\nDarker colors (closer to 0.0): These areas have statistically significant clustering. This means that the value of the attribute being analyzed is similar for neighboring areas. Whether this clustering is high values (high-high clusters) or low values (low-low clusters) depends on the specific data being analyzed.\n\nLighter colors (closer to 1.0): These areas do not have statistically significant clustering. The values of the attribute being analyzed are not spatially clustered in these areas.\n\n## 4.4 Visuaising local Moran’s I and p-value\n\nFor effective comparison, it will be better for us to plot both maps next to each other as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Dengue Cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n## 4.5 Visualising LISA map\n\nThe LISA map is a categorical representation revealing both outliers and clusters within a dataset. It identifies two kinds of outliers: High-Low and Low-High. Similarly, it highlights two types of clusters: High-High and Low-Low. Essentially, the LISA map is derived by integrating local Moran's I values of geographical regions along with their corresponding p-values.\n\nWithin the lisa sf data frame, three fields encompass the LISA categories: mean, median, and pysal. Typically, the mean classification is preferred, as illustrated in the following code snippet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa  %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n# 5.0 Hot Spot and Cold Spot Area Analysis (HCSA)\n\nThe HCSA employs spatial weights to pinpoint locations exhibiting statistically significant hot spots and cold spots within a spatially weighted attribute, which are closely situated based on a calculated distance. This analysis clusters features together when similar high (hot) or low (cold) values occur in proximity. The polygon features typically denote administrative boundaries or a customized grid structure.\n\n# 6.0 Computing local Gi\\* statistics\n\nLocal_gi() computes the local Gi\\* statistic to test for spatial autocorrelation in the data. The contiguity relationship matrix (wm_q$nb) and the corresponding spatial weights (wm_q$wt) are used to compute the local Gi\\* statistic and its associated p-value. This helps to determine if the observed spatial pattern is significantly different from what would be expected under spatial randomness.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw <- joined_data %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\nNow we implement the code which calculates the Local Gi\\* statistic for each observation in the dataset and adds it as a new variable `local_Gi`, allowing for the identification of spatial clusters and outliers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    dengueCases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\nHCSA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 258 features and 21 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 22\n   gi_star    e_gi   var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     <dbl>   <dbl>    <dbl>   <dbl>   <dbl>        <dbl>    <dbl>    <dbl> <nb> \n 1  -1.93  0.00289  2.10e-6  -1.70  0.0886          0.04     0.02    0.743 <int>\n 2  -0.803 0.00371  1.65e-6  -0.778 0.436           0.48     0.24    0.138 <int>\n 3  -1.60  0.00424  1.27e-6  -2.00  0.0452          0.06     0.03    0.249 <int>\n 4  -0.371 0.00360  1.60e-6  -0.175 0.861           0.94     0.47    0.289 <int>\n 5  -2.06  0.00334  2.60e-6  -1.71  0.0873          0.02     0.01    0.743 <int>\n 6  -2.88  0.00338  1.36e-6  -2.68  0.00745         0.02     0.01    0.208 <int>\n 7  -0.908 0.00324  1.79e-6  -0.606 0.544           0.56     0.28    0.456 <int>\n 8  -0.162 0.00387  1.18e-6  -0.152 0.879           0.98     0.49    0.355 <int>\n 9   1.59  0.00402  1.63e-6   1.70  0.0887          0.1      0.05    0.275 <int>\n10  -1.13  0.00380  1.72e-6  -1.10  0.270           0.28     0.14    0.372 <int>\n# ℹ 248 more rows\n# ℹ 13 more variables: wts <list>, VILLCODE <chr>, COUNTYNAME <chr>,\n#   TOWNNAME <chr>, VILLNAME <chr>, VILLENG <chr>, COUNTYID <chr>,\n#   COUNTYCODE <chr>, TOWNID <chr>, TOWNCODE <chr>, NOTE <chr>,\n#   dengueCases <dbl>, geometry <POLYGON [°]>\n```\n:::\n:::\n\n\n## 6.1 Visualising Gi\\*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n## 6.2 Visualising p-value of HCSA\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n## 6.3 Visuaising local HCSA\n\nFor effective comparison, it will be better for us to plot both maps next to each other as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n# 7.0 Visualising hot spot and cold spot areas\n\nThe HCSA map is a categorical representation revealing both hot spots and cold spots within a dataset. It identifies two kinds of outliers: High-High and Low-Low. Essentially, the HCSA map is derived by integrating `local Gi*` values of geographical regions along with their corresponding p-values.\n\nNow, we are ready to plot the significant (i.e. p-values less than 0.05) hot spot and cold spot areas by using appropriate tmap functions as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- HCSA  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\nFigure above reveals that there is one hot spot area and two cold spot areas. Interestingly, the hot spot areas coincide with the High-high cluster identifies by using local Moran’s I method in the earlier sub-section. This is a strong indication that the hot spot areas are not random and are statistically significant.\n\n# 8.0 Performing Emerging Hotspot Analysis\n\nEmerging hot spot analysis is a method used to identify areas that are experiencing significant changes in the spatial distribution of a phenomenon. This analysis is particularly useful for identifying areas that are becoming hot spots or cold spots over time.\n\n## 8.1 Creating a Time Series Cube\n\nA time series cube is a data structure that contains a series of spatial data layers, each representing the spatial distribution of a phenomenon at a specific point in time. In this case, we will create a time series cube containing the number of dengue fever cases in Tainan City, Taiwan, for each week of the year 2023.\n\n::: callout-note\nWe start by resetting the Tainan and Dengue data to its original filtered form.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_tainan <- tainan[tainan$TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"), ]\nfiltered_dengue <- dengueDaily[dengueDaily$week_number_onsetDay >= onset_start_week & dengueDaily$week_number_onsetDay <= onset_end_week & year(dengueDaily$發病日) == year, ]\nfiltered_dengue <- filtered_dengue %>%\n  rename('x-coordinate' = 最小統計區中心點X,\n         'y-coordinate' = 最小統計區中心點Y,\n         'COUNTYNAME' = 居住縣市,\n         'VILLNAME' = 居住村里,\n         'TOWNNAME' = 居住鄉鎮)\ngroupedDengue <- filtered_dengue %>%\n  group_by(week_number_onsetDay, TOWNNAME, VILLNAME) %>%\n  summarise(count = sum(確定病例數))\n```\n:::\n\n\nWe then join the filtered Tainan and Dengue data to create a new data frame containing the number of dengue fever cases in Tainan City for each week of the year 2023.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoinMe <- left_join(filtered_tainan, groupedDengue, by = c(\"TOWNNAME\", \"VILLNAME\"))\n```\n:::\n\n\nWe then select only the columns that we need for the time series cube.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoinMe <- joinMe %>%\n  select(1,11,12)\n```\n:::\n\n\nWe then drop the geometry column from the data frame and create a for loop to fill in missing values for each week of the year 2023.\n\n\n::: {.cell}\n\n:::\n\n\nWe then convert the data frame to a tibble and create a time series cube using the spacetime() function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengueDrop <- as_tibble(dengueDrop)\ndengue_st <- spacetime(dengueDrop, filtered_tainan,\n                      .loc_col = \"VILLCODE\",\n                      .time_col = \"week_number_onsetDay\")\n```\n:::\n\n\nNext, `is_spacetime_cube()` of sfdep package will be used to verify if dengue_st is indeed an space-time cube object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(dengue_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## 8.2 Computing Gi\\*\n\nNext, we will compute the local Gi\\* statistics. This will help us to identify areas that are experiencing significant changes in the spatial distribution of dengue fever cases over time.\n\n### 8.2.1 Deriving the spatial weights\n\nThe code chunk below will be used to identify neighbors and to derive an inverse distance weights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_nb <- dengue_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\nNote that this dataset now has neighbors and weights for each time-slice.\n\nWe can use these new columns to manually calculate the local Gi\\* for each location. We can do this by grouping by *Year* and using `local_gstar_perm()` of sfdep package. After which, we `use unnest()` to unnest *gi_star* column of the newly created *gi_starts* data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- dengue_nb %>% \n  group_by(week_number_onsetDay) %>% \n  mutate(gi_star = local_gstar_perm(\n    count, nb, wt)) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n\n# 9.0 Mann-Kendall Test\n\nWith these Gi\\* measures we can then evaluate each location for a trend using the Mann-Kendall test. The code chunk below uses different VILLCODE to evaluate the trend of dengue fever cases over time.\n\n::: {.panel-tabset .nav-pills}\n## 67000350032\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>% \n  filter(VILLCODE == 67000350032) |> \n  select(VILLCODE, week_number_onsetDay, gi_star)\n\np <- ggplot(data = cbg, \n       aes(x = week_number_onsetDay, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-e2ecedf8c1e4e9e0fe9e\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e2ecedf8c1e4e9e0fe9e\">{\"x\":{\"data\":[{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[-0.76953858609621484,-1.0570155643917327,-1.0152492812208826,-1.1706937055030777,-1.4388702737432149,-1.5607552937558211,-1.594744260521413,-1.9090788518987165,-1.8095666589673136,-2.0956475476872658,-1.8771709936084202,-1.9852658586688157,-1.8843186240800549,-2.1526037004719116,-1.8380042642593513,-1.4809600441091031,-0.98621151043427602,-1.1426536232206619,-1.0281852645185667,0.26877677041112735],\"text\":[\"week_number_onsetDay: 31<br />gi_star: -0.7695386\",\"week_number_onsetDay: 32<br />gi_star: -1.0570156\",\"week_number_onsetDay: 33<br />gi_star: -1.0152493\",\"week_number_onsetDay: 34<br />gi_star: -1.1706937\",\"week_number_onsetDay: 35<br />gi_star: -1.4388703\",\"week_number_onsetDay: 36<br />gi_star: -1.5607553\",\"week_number_onsetDay: 37<br />gi_star: -1.5947443\",\"week_number_onsetDay: 38<br />gi_star: -1.9090789\",\"week_number_onsetDay: 39<br />gi_star: -1.8095667\",\"week_number_onsetDay: 40<br />gi_star: -2.0956475\",\"week_number_onsetDay: 41<br />gi_star: -1.8771710\",\"week_number_onsetDay: 42<br />gi_star: -1.9852659\",\"week_number_onsetDay: 43<br />gi_star: -1.8843186\",\"week_number_onsetDay: 44<br />gi_star: -2.1526037\",\"week_number_onsetDay: 45<br />gi_star: -1.8380043\",\"week_number_onsetDay: 46<br />gi_star: -1.4809600\",\"week_number_onsetDay: 47<br />gi_star: -0.9862115\",\"week_number_onsetDay: 48<br />gi_star: -1.1426536\",\"week_number_onsetDay: 49<br />gi_star: -1.0281853\",\"week_number_onsetDay: 50<br />gi_star:  0.2687768\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":48.949771689497723},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.050000000000001,50.950000000000003],\"tickmode\":\"array\",\"ticktext\":[\"35\",\"40\",\"45\",\"50\"],\"tickvals\":[35,40,45,50],\"categoryorder\":\"array\",\"categoryarray\":[\"35\",\"40\",\"45\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"week_number_onsetDay\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.2736727240160635,0.3898457939552793],\"tickmode\":\"array\",\"ticktext\":[\"-2.0\",\"-1.5\",\"-1.0\",\"-0.5\",\"0.0\"],\"tickvals\":[-2,-1.5,-1,-0.50000000000000022,0],\"categoryorder\":\"array\",\"categoryarray\":[\"-2.0\",\"-1.5\",\"-1.0\",\"-0.5\",\"0.0\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"378c5cf84a75\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"378c5cf84a75\",\"visdat\":{\"378c5cf84a75\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## 67000370005\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>% \n  filter(VILLCODE == 67000370005) |> \n  select(VILLCODE, week_number_onsetDay, gi_star)\n\np <- ggplot(data = cbg, \n       aes(x = week_number_onsetDay, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-56ded1fcbf305623a1ac\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-56ded1fcbf305623a1ac\">{\"x\":{\"data\":[{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[-0.50216442578360321,-1.1806520050840903,-1.4501806591125181,-1.039450247717095,-1.459685849564619,-1.7891355919676957,-1.6587338446563735,-1.1815179994243794,-0.53480366118858602,0.12286891765831108,-1.1540762498790433,-0.25961100586697067,-1.4106321320042634,-0.0089123945718893125,0.94350410639371096,1.7101141060360523,0.041212060174089064,1.9097854059674699,3.698348879083019,0.38392036446479527],\"text\":[\"week_number_onsetDay: 31<br />gi_star: -0.502164426\",\"week_number_onsetDay: 32<br />gi_star: -1.180652005\",\"week_number_onsetDay: 33<br />gi_star: -1.450180659\",\"week_number_onsetDay: 34<br />gi_star: -1.039450248\",\"week_number_onsetDay: 35<br />gi_star: -1.459685850\",\"week_number_onsetDay: 36<br />gi_star: -1.789135592\",\"week_number_onsetDay: 37<br />gi_star: -1.658733845\",\"week_number_onsetDay: 38<br />gi_star: -1.181517999\",\"week_number_onsetDay: 39<br />gi_star: -0.534803661\",\"week_number_onsetDay: 40<br />gi_star:  0.122868918\",\"week_number_onsetDay: 41<br />gi_star: -1.154076250\",\"week_number_onsetDay: 42<br />gi_star: -0.259611006\",\"week_number_onsetDay: 43<br />gi_star: -1.410632132\",\"week_number_onsetDay: 44<br />gi_star: -0.008912395\",\"week_number_onsetDay: 45<br />gi_star:  0.943504106\",\"week_number_onsetDay: 46<br />gi_star:  1.710114106\",\"week_number_onsetDay: 47<br />gi_star:  0.041212060\",\"week_number_onsetDay: 48<br />gi_star:  1.909785406\",\"week_number_onsetDay: 49<br />gi_star:  3.698348879\",\"week_number_onsetDay: 50<br />gi_star:  0.383920364\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.050000000000001,50.950000000000003],\"tickmode\":\"array\",\"ticktext\":[\"35\",\"40\",\"45\",\"50\"],\"tickvals\":[35,40,45,50],\"categoryorder\":\"array\",\"categoryarray\":[\"35\",\"40\",\"45\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"week_number_onsetDay\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.0635098155202316,3.9727231026355549],\"tickmode\":\"array\",\"ticktext\":[\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\"],\"tickvals\":[-2,-1,0,1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"378c6ba615f7\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"378c6ba615f7\",\"visdat\":{\"378c6ba615f7\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## 67000350017\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>% \n  filter(VILLCODE == 67000350017) |> \n  select(VILLCODE, week_number_onsetDay, gi_star)\n\np <- ggplot(data = cbg, \n       aes(x = week_number_onsetDay, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-0610e247e5c0adfbea84\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0610e247e5c0adfbea84\">{\"x\":{\"data\":[{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[-0.75297789398975801,-0.051456950178079504,0.52693964556770034,1.8515152753372499,0.62012639911968093,0.61466011772288298,0.62410512659365491,-0.64441642217206085,0.27898658786379743,-0.11109145872814276,-0.62420379306850948,-1.5710984134295389,-0.9351554591699649,-0.13274416335009395,-0.33839670991930393,-1.3624553869289009,-0.97353678776977637,-0.7130468757261369,-0.56292897584778323,-1.1798715992829802],\"text\":[\"week_number_onsetDay: 31<br />gi_star: -0.75297789\",\"week_number_onsetDay: 32<br />gi_star: -0.05145695\",\"week_number_onsetDay: 33<br />gi_star:  0.52693965\",\"week_number_onsetDay: 34<br />gi_star:  1.85151528\",\"week_number_onsetDay: 35<br />gi_star:  0.62012640\",\"week_number_onsetDay: 36<br />gi_star:  0.61466012\",\"week_number_onsetDay: 37<br />gi_star:  0.62410513\",\"week_number_onsetDay: 38<br />gi_star: -0.64441642\",\"week_number_onsetDay: 39<br />gi_star:  0.27898659\",\"week_number_onsetDay: 40<br />gi_star: -0.11109146\",\"week_number_onsetDay: 41<br />gi_star: -0.62420379\",\"week_number_onsetDay: 42<br />gi_star: -1.57109841\",\"week_number_onsetDay: 43<br />gi_star: -0.93515546\",\"week_number_onsetDay: 44<br />gi_star: -0.13274416\",\"week_number_onsetDay: 45<br />gi_star: -0.33839671\",\"week_number_onsetDay: 46<br />gi_star: -1.36245539\",\"week_number_onsetDay: 47<br />gi_star: -0.97353679\",\"week_number_onsetDay: 48<br />gi_star: -0.71304688\",\"week_number_onsetDay: 49<br />gi_star: -0.56292898\",\"week_number_onsetDay: 50<br />gi_star: -1.17987160\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.050000000000001,50.950000000000003],\"tickmode\":\"array\",\"ticktext\":[\"35\",\"40\",\"45\",\"50\"],\"tickvals\":[35,40,45,50],\"categoryorder\":\"array\",\"categoryarray\":[\"35\",\"40\",\"45\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"week_number_onsetDay\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.7422290978678783,2.0226459597755895],\"tickmode\":\"array\",\"ticktext\":[\"-1\",\"0\",\"1\",\"2\"],\"tickvals\":[-1,0,1,2],\"categoryorder\":\"array\",\"categoryarray\":[\"-1\",\"0\",\"1\",\"2\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"378c2e1d1da5\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"378c2e1d1da5\",\"visdat\":{\"378c2e1d1da5\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## 67000310033\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>% \n  filter(VILLCODE == 67000310033) |> \n  select(VILLCODE, week_number_onsetDay, gi_star)\n\np <- ggplot(data = cbg, \n       aes(x = week_number_onsetDay, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-ee62540afc6183ec2409\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ee62540afc6183ec2409\">{\"x\":{\"data\":[{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[4.0735657187212437,4.8081535985934893,3.5182124914872484,2.0347299275029114,1.2016717275414099,2.4099261235988667,1.4766438827843638,0.89918621879195593,1.4718177686271021,-0.024870301785805491,0.83628932436229142,1.1081850852319091,1.5157973892381911,0.33846405999291534,1.2149507506638373,0.1829791975069377,1.2438484526697893,0.54067360975712142,2.2960515509835617,0.26430740924293161],\"text\":[\"week_number_onsetDay: 31<br />gi_star:  4.0735657\",\"week_number_onsetDay: 32<br />gi_star:  4.8081536\",\"week_number_onsetDay: 33<br />gi_star:  3.5182125\",\"week_number_onsetDay: 34<br />gi_star:  2.0347299\",\"week_number_onsetDay: 35<br />gi_star:  1.2016717\",\"week_number_onsetDay: 36<br />gi_star:  2.4099261\",\"week_number_onsetDay: 37<br />gi_star:  1.4766439\",\"week_number_onsetDay: 38<br />gi_star:  0.8991862\",\"week_number_onsetDay: 39<br />gi_star:  1.4718178\",\"week_number_onsetDay: 40<br />gi_star: -0.0248703\",\"week_number_onsetDay: 41<br />gi_star:  0.8362893\",\"week_number_onsetDay: 42<br />gi_star:  1.1081851\",\"week_number_onsetDay: 43<br />gi_star:  1.5157974\",\"week_number_onsetDay: 44<br />gi_star:  0.3384641\",\"week_number_onsetDay: 45<br />gi_star:  1.2149508\",\"week_number_onsetDay: 46<br />gi_star:  0.1829792\",\"week_number_onsetDay: 47<br />gi_star:  1.2438485\",\"week_number_onsetDay: 48<br />gi_star:  0.5406736\",\"week_number_onsetDay: 49<br />gi_star:  2.2960516\",\"week_number_onsetDay: 50<br />gi_star:  0.2643074\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":31.415525114155255},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.050000000000001,50.950000000000003],\"tickmode\":\"array\",\"ticktext\":[\"35\",\"40\",\"45\",\"50\"],\"tickvals\":[35,40,45,50],\"categoryorder\":\"array\",\"categoryarray\":[\"35\",\"40\",\"45\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"week_number_onsetDay\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.26652149680477022,5.0498047936124539],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"],\"tickvals\":[0,1,2,3,4,5],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"378c25af7403\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"378c25af7403\",\"visdat\":{\"378c25af7403\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n     tau      sl     S     D  varS\n   <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 -0.453 0.00582   -86  190.   950\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- gi_stars %>%\n  group_by(VILLCODE) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n:::\n\n\n## 9.1 Arrange to show significant emerging hot/cold spots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\n```\n:::\n\n\n## 9.2 Performing Emerging Hotspot Analysis\n\nLastly, we will perform EHSA analysis by using [`emerging_hotspot_analysis()`](https://sfdep.josiahparry.com/reference/emerging_hotspot_analysis.html) of sfdep package. It takes a spacetime object x (i.e. GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = dengue_st, \n  .var = \"count\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\n### 9.2.1 Visualising the distribution of EHSA classes\n\nIn the code chunk below, ggplot2 functions ised used to reveal the distribution of EHSA classes as a bar chart.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n\nFigure above shows that oscilating hot spots class has the highest numbers of dengue cases.\n\n### 9.2.2 Visualising EHSA\n\nIn this section, you will learn how to visualise the geographic distribution EHSA classes. However, before we can do so, we need to join both tainan and ehsa together by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_ehsa <- filtered_tainan %>%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n```\n:::\n\n\nNext, tmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- tainan_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(tainan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n\n# 10.0 Conclusion\n\nIn this study, we have successfully applied spatial and spatio-temporal analysis methods to discover the distribution of d dengue fever in Tainan City, Taiwan. We have identified clusters, outliers, and emerging hot spot/cold spot areas within the region. The results of the analysis will be useful for public health officials and policymakers to make informed decisions and implement targeted interventions to control the spread of dengue fever in Tainan City, Taiwan.\n\nThe reason for the high number of dengue cases in the inner regions of Tainan City, is likely related to the hot and humid summers from August to November. The high temperatures and humidity provide ideal breeding conditions for the mosquito, which is the primary vector for dengue fever. During December, the number of dengue cases decreases, likely due to the cooler temperatures and lower humidity as seen from the distribution of dengue cases by month earlier in the analysis.\n\nFurthermore, our analysis reveals significant shifts in the spatial distribution of dengue fever cases over time in certain areas of Tainan City. These areas, likely emerging hot spots or cold spots, warrant further investigation to uncover the underlying factors driving these changes. By understanding these dynamics, public health officials and policymakers can develop targeted interventions to address the spread of dengue fever in these areas effectively.\n\n# 11.0 References\n\nOpenAI. (2022). ChatGPT \\[Computer software\\]. Retrieved from <https://openai.com/chatgpt>\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
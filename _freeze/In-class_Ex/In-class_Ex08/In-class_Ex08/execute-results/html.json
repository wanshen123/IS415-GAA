{
  "hash": "d650b4c8ca5912b0ea93ac01981081ac",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 8\"\ndescription: \"Geographically Weighted Predictive Models\"\nexecute: \n  warning: false\n  freeze: true\n# date: \"2024-03-18\"\ndate: 03/18/2024\ndate-format: \"D MMM, YYYY\" \nauthor: \n  - Wan Shen\nsidebar: false\ntitle-block-banner: true\ncategories:\n  - In-Class Exercise\ntitle-block-categories: false\n---\n\n\n# 1.0 Getting Started\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(performance ,ggstatsplot, rpart.plot, rpart, gtsummary, tidyverse, tidymodels, SpatialML, GWmodel, sf, spdep, tmap)\n```\n:::\n\n\n# 2.0 Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf <- read_rds(\"../../data/rds/HDB_resale.rds\")\n```\n:::\n\n\nNext, the code chunk below is used to reveal the properties of *rs_sf* object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(\n  rs_sf,\n  prop = 5/10,)\ntrain_sf <- training(resale_split)\ntest_sf <- testing(resale_split)\n```\n:::\n\n\n# 3.0 Geographically Weighted Predictive Models\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_sf %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n\ntest_df <- test_sf %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n```\n:::\n\n\n# 4.0 Computing Correlation Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf1 <- rs_sf %>%\n  st_drop_geometry()\nggcorrmat(rs_sf1[, 2:17])\n```\n\n::: {.cell-output-display}\n![](In-class_Ex08_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n# 5.0 Geographically Weighted Predictive Models\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_df %>%\n  select(-c(PROX_CHAS))\ntrain_sf <- train_sf %>%\n  select(-c(PROX_CHAS))\ntest_df <- test_df %>%\n  select(-c(PROX_CHAS))\ntest_sf <- test_sf %>%\n  select(-c(PROX_CHAS))\n```\n:::\n\n\n# 6.0 Model Fitting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_mlr <- lm(formula = RESALE_PRICE ~\nFLOOR_AREA_SQM + STOREY_ORDER +\nREMAINING_LEASE_MTHS + PROX_CBD +\nPROX_ELDERLYCARE + PROX_HAWKER +\nPROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\nWITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\nWITHIN_1KM_PRISCH, data=train_df)\n```\n:::\n\n\n# 7.0 Model Evaluation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_sp <- as_Spatial(train_sf)\ntrain_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 7950 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 16\nnames       : RESALE_PRICE, FLOOR_AREA_SQM, STOREY_ORDER, REMAINING_LEASE_MTHS,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, WITHIN_350M_BUS, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 1.21715176356525e-07,                        0,                     0,               0, ... \nmax values  :      1186888,            126,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.80329916478192,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.26056404492346,     1.57131703651196,                        7,                    20,              18, ... \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_sp <- as_Spatial(test_sf)\ntest_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 7951 \nextent      : 11597.31, 42623.63, 28287.8, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 16\nnames       : RESALE_PRICE, FLOOR_AREA_SQM, STOREY_ORDER, REMAINING_LEASE_MTHS,         PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, WITHIN_350M_BUS, ... \nmin values  :       230888,             74,            1,                  546, 1.00583660772922, 3.34897933104965e-07, 0.0333358643817954, 0.0414043955932523, 0.0441643212802781, 0.0907500295577619,                0, 1.21715176356525e-07,                        0,                     0,               0, ... \nmax values  :      1088000,            138,           14,                 1151,  19.632402730488,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6169590126272, 2.27100643784442,     1.53786629004208,                        7,                    16,              18, ... \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(rs_sf)\ncoords_train <- st_coordinates(train_sf)\ncoords_test <- st_coordinates(test_sf)\n```\n:::\n\n\n# 8.0 Model Fitting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_rp <- rpart(formula = RESALE_PRICE ~\nFLOOR_AREA_SQM + STOREY_ORDER +\nREMAINING_LEASE_MTHS + PROX_CBD +\nPROX_ELDERLYCARE + PROX_HAWKER +\nPROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\nWITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\nWITHIN_1KM_PRISCH, data=train_df)\nrs_rp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nn= 7950 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n 1) root 7950 1.139546e+14 433705.6  \n   2) PROX_CBD>=7.974483 6665 4.472144e+13 403736.0  \n     4) REMAINING_LEASE_MTHS< 1020.5 4228 1.573100e+13 370187.4  \n       8) PROX_GOOD_PRISCH>=3.629405 2271 3.851141e+12 340796.1 *\n       9) PROX_GOOD_PRISCH< 3.629405 1957 7.641480e+12 404294.6 *\n     5) REMAINING_LEASE_MTHS>=1020.5 2437 1.597594e+13 461940.1  \n      10) PROX_CBD>=10.40657 2331 9.762718e+12 451754.4  \n        20) PROX_GOOD_PRISCH>=4.866983 1123 2.801796e+12 423493.8 *\n        21) PROX_GOOD_PRISCH< 4.866983 1208 5.230246e+12 478026.4 *\n      11) PROX_CBD< 10.40657 106 6.532500e+11 685929.1 *\n   3) PROX_CBD< 7.974483 1285 3.219685e+13 589151.4  \n     6) REMAINING_LEASE_MTHS< 930.5 745 6.613365e+12 486637.6  \n      12) FLOOR_AREA_SQM< 98.5 451 2.446537e+12 442460.5 *\n      13) FLOOR_AREA_SQM>=98.5 294 1.936449e+12 554405.7 *\n     7) REMAINING_LEASE_MTHS>=930.5 540 6.952722e+12 730582.5  \n      14) REMAINING_LEASE_MTHS< 1071.5 314 2.461969e+12 676641.3 *\n      15) REMAINING_LEASE_MTHS>=1071.5 226 2.307737e+12 805527.4 *\n```\n:::\n:::\n\n\n# 9.0 Model Evaluation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrpart.plot(rs_rp)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex08_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## 9.1 Calibrating Random Forest Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_rf <- ranger(formula = RESALE_PRICE ~\nFLOOR_AREA_SQM + STOREY_ORDER +\nREMAINING_LEASE_MTHS + PROX_CBD +\nPROX_ELDERLYCARE + PROX_HAWKER +\nPROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\nWITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\nWITHIN_1KM_PRISCH, data=train_df, importance = \"impurity\")\nrs_rf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRanger result\n\nCall:\n ranger(formula = RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER +      REMAINING_LEASE_MTHS + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +      PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET +      WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +      WITHIN_1KM_PRISCH, data = train_df, importance = \"impurity\") \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      7950 \nNumber of independent variables:  15 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       738005688 \nR squared (OOB):                  0.9485198 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvi <- as.data.frame(rs_rf$variable.importance)\nvi$variable <- rownames(vi)\nvi <- vi %>%\n  rename(vi = \"rs_rf$variable.importance\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = vi,\n       aes(x = vi,\n           y = reorder(variable, vi))) +\n  geom_bar(stat=\"identity\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex08_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n# 10.0 Model Evaluation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_grf <- grf(formula = RESALE_PRICE ~\nFLOOR_AREA_SQM + STOREY_ORDER +\nREMAINING_LEASE_MTHS + PROX_CBD +\nPROX_ELDERLYCARE + PROX_HAWKER +\nPROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\nWITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\nWITHIN_1KM_PRISCH, data=train_df, kernel=\"adaptive\", coords= coords_train, bw.min = 25, bw.max = 60, step = 1, nthreads = 16, forest = FALSE, weighted = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_df <- cbind(test_sf, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred <- predict.grf(rs_grf,\n                        test_df,\n                        x.var.name=\"X\",\n                        y.var.name=\"Y\",\n                        local.w=1,\n                        global.w=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred <- read_rds(\"../../data/models/grf_pred.rds\")\ngrf_pred_df <- as.data.frame(grf_pred)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_df %>%\n  select(RESALE_PRICE) %>%\n  cbind(grf_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred <- predict(rs_rf, test_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred_df <- as.data.frame(rf_pred$predictions) %>%\n  rename(rf_pred = \"rf_pred$predictions\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- cbind(test_pred, rf_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr_pred <- predict(rs_mlr, test_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr_pred_df <- as.data.frame(mlr_pred) %>%\n  rename(mlr_pred = \"mlr_pred\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- cbind(test_pred, mlr_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyardstick::rmse(test_pred, RESALE_PRICE, mlr_pred)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc <- test_pred %>%\n  pivot_longer(cols = c(2:4), \n               names_to = \"models\",\n               values_to = \"predicted\")\n```\n:::\n",
    "supporting": [
      "In-class_Ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}